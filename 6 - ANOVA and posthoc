
### creating a new matrix for ANOVA test

groups= c("radexp","radexp","radexp","radexp","radexp","radnonexp","radnonexp","radnonexp","radnonexp","healthy","healthy","healthy","healthy","healthy")
anovamatrix=t(thyroid.expr.matrix.sub)
anovamatrix= cbind(groups,anovamatrix)

  # anovamatrix[,1] = groups(exp, nonexp, healthy)
  # anovamatrix[,i] = genes with their expression data


# ANOVA Test for each gene
sig.genes.vector=c()

    for (i in 2:dim(anovamatrix)[2]){
      if (summary.aov(aov(anovamatrix[,i]~ anovamatrix[,1]))[[1]][[1,5]] < 0.05){
        sig.genes.vector = rbind(sig.genes.vector, colnames(anovamatrix)[i])
      }
     
    }

sig.genes.matrix= thyroid.expr.matrix.sub[sig.genes.vector,]
  # matrix with expression data of our significant diffent expressed genes
  
  
  
### post hoc test for a single gene
anovatry= aov(anovamatrix[,2] ~ anovamatrix[,1]) 
  # anova test for testing the following steps
  
posthoc=TukeyHSD(anovatry)
posthoc # results in matrix with differences in means, lower and upper border and p adjustment for each comparison
plot(posthoc)


  # We want to try to get an ANOVA-Boxplot. So here it waas we have, but doesn't work yet
  
#install.packages("multcompView")
library(multcompView)
 
 #preparation
chipnames =colnames(thyroid.expr.matrix.sub)
uniquegroups= unique(groups)

value= anovamatrix[,2]
data= data.frame(groups, value)
  # data is dataframe with 14 groups in data[,1] and the expression values for one gene in data[,2]


# the function
generate_label_df = function (posthoc, variable){
  
  Tukey.levels = posthoc[[variable]][,4]
  Tukey.labels = data.frame(multcompLetters(Tukey.levels)["Letters"])
  Tukey.labels$groups = rownames(Tukey.labels)
  Tukey.labels = Tukey.labels [order(Tukey.labels$groups), ]
  return (Tukey.labels)}
  
TRY1= generate_label_df(posthoc, 1) 




    ###THIS WORKS:
Tukey.levels = posthoc[[1]][,4]
Tukey.labels = data.frame(multcompLetters(Tukey.levels)["Letters"])
Tukey.labels$groups = rownames(Tukey.labels)
Tukey.labels = Tukey.labels [order(Tukey.labels$groups), ]
Turkey.labels




 
